# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

# What is the value of the first triangle number to have over five hundred divisors?

def checkfortrianglenumber(score):
	
	# tn = (0.5*n)*(n-1)
	for n in range(1, score, 1):
		while run = True:
			if (0.5*n) * (n-1) == score:
				run = False
				return True
 		print "already proved it's triangular"


def countdivisors(x):
	
	divisors = 0
	
	for i in range(1, x+1, 1):
		if x % i == 0:
			divisors += 1
	
	return divisors


answer = 0
bestyet = 0
candidate = 0
run = True

while run == True:
	candidate += 1
	if checkfortrianglenumber(candidate) == True:
		if countdivisors(candidate) > bestyet:
			bestyet = countdivisors(candidate)
			if bestyet > 500:
				run = False

answer = candidate
print "Answer is %d" % (answer)